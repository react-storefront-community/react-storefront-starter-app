const { Router } = require('@xdn/core/router')
const { createNextPlugin } = require('@xdn/next')
const { API, SSR, SERVICE_WORKER, cacheResponse } = require('./cache')
const { nextMiddleware, renderNext } = createNextPlugin()

module.exports = new Router()
  .match('/service-worker.js', async ({ cache, serveStatic }) => {
    cache(SERVICE_WORKER)
    await serveStatic('.next/static/service-worker.js')
  })
  .match('/s/:subcategoryId', cacheResponse(SSR))
  .match('/api/:version/s/:subcategoryId', cacheResponse(API))
  .match('/p/:productId', cacheResponse(SSR))
  .match('/api/:version/p/:productId', cacheResponse(API))
  .match('/', cacheResponse(SSR))
  .match('/api/:version/', cacheResponse(API))
  .use(nextMiddleware)
  .fallback(({ proxy }) => proxy('legacy'))
